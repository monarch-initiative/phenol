<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.monarchinitiative.phenol</groupId>
    <artifactId>phenol</artifactId>
    <version>2.0.0-SNAPSHOT</version>
  </parent>

  <artifactId>phenol-cli</artifactId>

  <name>phenol-cli</name>
  <description>phenol-cli gives command line access to phenol</description>
  <url>https://github.com/monarchinitiative/phenol</url>

  <dependencies>

    <dependency>
      <groupId>info.picocli</groupId>
      <artifactId>picocli</artifactId>
      <version>4.5.2</version>
    </dependency>

    <!-- Phenol modules -->
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>phenol-io</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>phenol-annotations</artifactId>
      <version>${project.parent.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>phenol-analysis</artifactId>
      <version>${project.parent.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>${commons-csv.version}</version>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>

  </dependencies>

  <build>

    <!-- TODO - clean up the build section, remove redundant plugins, configurations, etc... -->
    <finalName>phenol-cli</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <!--Use filtering so that maven will replace placeholders with values
          from the pom e.g. ${project.version} -->
        <filtering>true</filtering>
      </resource>
    </resources>
    <plugins>
      <!-- Make an executable jar and specify the main class and classpath -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.2.0</version>
        <configuration>
          <archive>
            <manifest>
              <addClasspath>true</addClasspath>
              <classpathPrefix>lib/</classpathPrefix>
              <!-- set useUniqueVersions=false in order that the classpath
                has the SNAPSHOT instead of the build number prefixed to the dependency -->
              <useUniqueVersions>false</useUniqueVersions>
              <mainClass>org.monarchinitiative.phenol.cli.MainOld</mainClass>
            </manifest>
          </archive>
          <!-- <compilerArgument>-Xlint:all</compilerArgument>
           <showWarnings>true</showWarnings>
           <showDeprecation>true</showDeprecation> -->
        </configuration>
      </plugin>
      <!-- More JAR building -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.2.4</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>org.monarchinitiative.phenol.cli.MainOld</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!-- Specify the resources which need to be made accessible to the
        user -->
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>validate</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${project.build.directory}/resources</outputDirectory>
              <resources>
                <resource>
                  <directory>src/resources</directory>
                  <!--Use filtering so that maven will replace placeholders
                    with values from the pom e.g. ${project.version} -->
                  <filtering>true</filtering>
                  <includes>
                    <include>application.properties</include>
                    <include>example.settings</include>
                    <include>test.settings</include>
                    <include>log4j2.xml</include>
                  </includes>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <!--This plugin assembles the various elements together into a redistributable
        zip/tar.gz file -->
      <plugin>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <descriptors>
            <descriptor>src/assembly/dep.xml</descriptor>
          </descriptors>
        </configuration>
        <executions>
          <execution>
            <id>make-assembly</id> <!-- this is used for inheritance merges -->
            <phase>package</phase> <!-- bind to the packaging phase -->
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
