<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>


  <groupId>org.monarchinitiative.phenol</groupId>
  <artifactId>phenol</artifactId>
  <packaging>pom</packaging>
  <version>1.6.4-SNAPSHOT</version>

  <name>Phenol</name>

  <description>Phenotype Ontology Library: phenol</description>
  <url>https://github.com/monarchinitiative/phenol</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
    <hamcrest.version>1.3</hamcrest.version>
    <junit.jupiter.version>5.7.0</junit.jupiter.version>
    <guava.version>30.1-jre</guava.version>
    <checkstyle.version>2.17</checkstyle.version>
    <slf4j.version>1.7.25</slf4j.version>
    <commons.io.version>2.6</commons.io.version>
    <mockito.version>3.7.7</mockito.version>
    <jcommander.version>1.72</jcommander.version>
    <jackson.version>2.12.1</jackson.version>
    <h2.version>1.4.200</h2.version>
    <jgrapht.version>1.2.0</jgrapht.version>
  </properties>

  <modules>
    <module>phenol-core</module>
    <module>phenol-io</module>
    <module>phenol-annotations</module>
    <module>phenol-analysis</module>
    <module>phenol-cli</module>
  </modules>

  <!-- Inherit artifact from SonaType OSS pom.xml Following this article:
    http://java.dzone.com/articles/deploy-maven-central -->
  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>9</version>
  </parent>

  <!-- License Information for Maven Central -->
  <licenses>
    <license>
      <name>BSD 3-clause Clear License</name>
      <url>https://spdx.org/licenses/BSD-3-Clause-Clear.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <!-- Developers Information for Maven Central -->
  <developers>
    <developer>
      <name>Sebastian Bauer</name>
      <email>mail@sebastianbauer.info</email>
    </developer>
    <developer>
      <name>Peter Robinson</name>
      <email>peter.robinson@jax.org</email>
      <organization>The Jackson Laboratory</organization>
      <organizationUrl>https://www.jax.org</organizationUrl>
    </developer>
    <developer>
      <name>Manuel Holtgrewe</name>
      <email>Manuel.Holtgrewe@bihealth.de</email>
      <organization>Berlin Institute of Health</organization>
      <organizationUrl>https://www.bihealth.de</organizationUrl>
    </developer>
    <developer>
      <name>Sebastian Koehler</name>
      <email>sebastian.koehler@charite.de</email>
      <organization>Charite University Medicine Berlin</organization>
      <organizationUrl>https://www.charite.de</organizationUrl>
    </developer>
    <developer>
      <name>HyeongSik Kim</name>
      <email>HyeongSikKim@lbl.gov</email>
      <organization>Lawrence Berkeley National Laboratory</organization>
      <organizationUrl>https://www.lbl.gov</organizationUrl>
    </developer>
  </developers>

  <!-- SCM Information for Maven Central -->
  <scm>
    <connection>scm:git:git@github.com:monarch-initiative/phenol.git</connection>
    <developerConnection>scm:git:git@github.com:monarch-initiative/phenol.git</developerConnection>
    <url>scm:git:git@github.com:monarch-initiative/phenol.git</url>
    <tag>v${project.version}</tag>
  </scm>

  <distributionManagement>
    <repository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
    </repository>
    <snapshotRepository>
      <id>ossrh</id>
      <url>https://oss.sonatype.org/content/repositories/snapshots</url>
    </snapshotRepository>
  </distributionManagement>

  <profiles>
    <profile>
      <!-- This profile should be activated only when a release is being built. -->
      <!-- Then, GPG plugin is used to sign the artifacts. Note that you need to set up your GPG key first. -->
      <!-- Activate the profile by running e.g. `mvn -DperformRelease=true clean deploy` -->
      <id>release-sign-artifacts</id>
      <activation>
        <property>
          <name>performRelease</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!-- override version of GPG plugin to use new GPG signing features -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <phase>verify</phase>
                <goals>
                  <goal>sign</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>versions-maven-plugin</artifactId>
            <version>2.7</version>
            <configuration>
              <excludes>
                <exclude>org.apache.commons:commons-collections4</exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <!-- keeps the logging artifacts in sync with each other -->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.apache.logging.log4j</groupId>
        <artifactId>log4j-bom</artifactId>
        <version>2.10.0</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <!-- Hamcrest, JUnit addon-->
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-all</artifactId>
      <version>${hamcrest.version}</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <!-- JUnit Pioneer provides extensions fo Temp directories and things-->
    <dependency>
      <groupId>org.junit-pioneer</groupId>
      <artifactId>junit-pioneer</artifactId>
      <version>0.1.2</version>
      <scope>test</scope>
    </dependency>

    <!-- Mockito mocking -->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>

    <!-- SLF4J API -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <scope>test</scope>
    </dependency>

    <!-- Google Guava -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>

    <dependency>
      <groupId>org.jgrapht</groupId>
      <artifactId>jgrapht-core</artifactId>
      <version>${jgrapht.version}</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!-- Attach sources -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!-- Generate javadocs -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <javadocExecutable>${java.home}/bin/javadoc</javadocExecutable>
          <doclint>none</doclint>
          <quiet>true</quiet>
        </configuration>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M5</version>
        <configuration>
          <!-- disable forking, which seems to be the cause of mvn test 'freezing' -->
          <forkCount>0</forkCount>
          <!-- <forkNode implementation="org.apache.maven.plugin.surefire.extensions.SurefireForkNodeFactory" /> -->
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <id>default-cli</id>
            <phase>validate</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <banDuplicateClasses />
              </rules>
            </configuration>
          </execution>
          <execution>
            <id>enforce-maven</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <requireMavenVersion>
                  <version>3.4</version>
                </requireMavenVersion>
              </rules>
            </configuration>
          </execution>
        </executions>
      </plugin>


      <!-- Jacoco Coverage Reports -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.2</version>
        <executions>
          <!-- Prepares the property pointing to the JaCoCo runtime agent
            which is passed as VM argument when Maven the Surefire plugin is executed. -->
          <execution>
            <id>pre-unit-test</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <!-- Ensures that the code coverage report for unit tests is created
            after unit tests have been run. -->
          <execution>
            <id>post-unit-test</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Compilation -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.0</version>
        <configuration>
          <compilerArgument>-Xlint:all</compilerArgument>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <source>${java.version}</source>
          <target>${java.version}</target>
        </configuration>
      </plugin>

      <!-- Set versions into JAR -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!-- Code style checking -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.0.0</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>8.30</version>
          </dependency>
        </dependencies>
        <configuration>
          <configLocation>/google_checks.xml</configLocation>
          <enableFilesSummary>false</enableFilesSummary>
          <sourceDirectories>
            <sourceDirectory>src/main/java</sourceDirectory>
          </sourceDirectories>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
